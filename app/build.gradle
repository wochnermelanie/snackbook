/* build.gradle (Module: app) â€” corrected signing + structure */

import groovy.xml.MarkupBuilder

plugins {
    id 'com.android.application'
}

def twaManifest = [
    applicationId: 'com.snackbook.app',
    hostName: 'snackbook.org',
    launchUrl: '/',
    name: 'Snackbook',
    launcherName: 'Snackbook',
    themeColor: '#FFFFFF',
    themeColorDark: '#FFFFFF',
    navigationColor: '#FFFFFF',
    navigationColorDark: '#FFFFFF',
    navigationDividerColor: '#FFFFFF',
    navigationDividerColorDark: '#FFFFFF',
    backgroundColor: '#FFFFFF',
    enableNotifications: true,
    shortcuts: [],
    splashScreenFadeOutDuration: 0,
    generatorApp: 'bubblewrap-cli',
    fallbackType: 'customtabs',
    enableSiteSettingsShortcut: 'true',
    orientation: 'portrait',
]

android {
    compileSdkVersion 36
    namespace "com.snackbook.app"

    defaultConfig {
        applicationId "com.snackbook.app"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 20
        versionName "20"

        // App names
        resValue "string", "appName", twaManifest.name
        resValue "string", "launcherName", twaManifest.launcherName

        // Launch URL
        def launchUrl = "https://" + twaManifest.hostName + twaManifest.launchUrl
        resValue "string", "launchUrl", launchUrl

        // Web manifest / scope / share target
        resValue "string", "webManifestUrl", 'https://snackbook.org/manifest.json'
        resValue "string", "fullScopeUrl", 'https://snackbook.org/'
resValue "string", "shareTarget", '{\\"action\\":\\"https://snackbook.org/share\\",\\"method\\":\\"GET\\",\\"enctype\\":\\"application/x-www-form-urlencoded\\",\\"params\\":{\\"title\\":\\"title\\",\\"text\\":\\"text\\",\\"url\\":\\"url\\"}}'

        // Host + colors
        resValue "string", "hostName", twaManifest.hostName
        resValue "color", "colorPrimary", twaManifest.themeColor
        resValue "color", "colorPrimaryDark", twaManifest.themeColorDark
        resValue "color", "navigationColor", twaManifest.navigationColor
        resValue "color", "navigationColorDark", twaManifest.navigationColorDark
        resValue "color", "navigationDividerColor", twaManifest.navigationDividerColor
        resValue "color", "navigationDividerColorDark", twaManifest.navigationDividerColorDark
        resValue "color", "backgroundColor", twaManifest.backgroundColor

        // Provider + notifications
        resValue "string", "providerAuthority", twaManifest.applicationId + '.fileprovider'
        resValue "bool", "enableNotification", twaManifest.enableNotifications.toString()

        // Shortcuts resources (names only)
        twaManifest.shortcuts.eachWithIndex { shortcut, index ->
            resValue "string", "shortcut_name_$index", "$shortcut.name"
            resValue "string", "shortcut_short_name_$index", "$shortcut.short_name"
        }

        // Splash fade duration
        resValue "integer", "splashScreenFadeOutDuration", twaManifest.splashScreenFadeOutDuration.toString()

        // Misc
        resValue "string", "generatorApp", twaManifest.generatorApp
        resValue "string", "fallbackType", twaManifest.fallbackType
        resValue "bool", "enableSiteSettingsShortcut", twaManifest.enableSiteSettingsShortcut
        resValue "string", "orientation", twaManifest.orientation
    }

    // >>> Added: proper signing configuration <<<
    signingConfigs {
        release {
            storeFile file("C:/Users/admin/snackbook/android.keystore")
            keyAlias "(upload)"
            storePassword System.getenv("BUBBLEWRAP_KEYSTORE_PASSWORD")
            keyPassword   System.getenv("BUBBLEWRAP_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release // IMPORTANT: sign release builds
        }
        debug {
            // debug stays unsigned by default
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        checkReleaseBuilds false
    }
}

task generateShorcutsFile {
    assert twaManifest.shortcuts.size() < 5, "You can have at most 4 shortcuts."
    twaManifest.shortcuts.eachWithIndex { s, i ->
        assert s.name != null, 'Missing `name` in shortcut #' + i
        assert s.short_name != null, 'Missing `short_name` in shortcut #' + i
        assert s.url != null, 'Missing `icon` in shortcut #' + i
        assert s.icon != null, 'Missing `url` in shortcut #' + i
    }

    def shortcutsFile = new File("$projectDir/src/main/res/xml", "shortcuts.xml")

    def xmlWriter = new StringWriter()
    def xmlMarkup = new MarkupBuilder(new IndentPrinter(xmlWriter, "    ", true))

    xmlMarkup
        .'shortcuts'( 'xmlns:android': 'http://schemas.android.com/apk/res/android') {
            twaManifest.shortcuts.eachWithIndex { s, i ->
                'shortcut'(
                    'android:shortcutId': 'shortcut' + i,
                    'android:enabled': 'true',
                    'android:icon': '@drawable/' + s.icon,
                    'android:shortcutShortLabel': '@string/shortcut_short_name_' + i,
                    'android:shortcutLongLabel': '@string/shortcut_name_' + i) {
                    'intent'(
                        'android:action': 'android.intent.action.MAIN',
                        'android:targetPackage': twaManifest.applicationId,
                        'android:targetClass': twaManifest.applicationId + '.LauncherActivity',
                        'android:data': s.url)
                    'categories'('android:name': 'android.intent.category.LAUNCHER')
                }
            }
        }
    shortcutsFile.text = xmlWriter.toString() + '\n'
}

preBuild.dependsOn(generateShorcutsFile)

repositories {
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.androidbrowserhelper:androidbrowserhelper:2.6.2'
}
