{
  "version": 3,
  "sources": ["../../../../snackbook/netlify/functions/extract.mjs"],
  "sourceRoot": "C:/Users/admin/AppData/Local/Temp/tmp-18408-Cmgm60f9APL6",
  "sourcesContent": ["// netlify/functions/extract.mjs\r\nexport async function handler(event) {\r\n  try {\r\n    const { url } = JSON.parse(event.body || \"{}\");\r\n    if (!url) return json(400, { error: \"Missing url\" });\r\n\r\n    const res = await fetch(url, {\r\n      redirect: \"follow\",\r\n      headers: {\r\n        \"user-agent\":\r\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122 Safari/537.36\",\r\n        \"accept-language\": \"de-DE,de;q=0.9,en;q=0.8\"\r\n      }\r\n    });\r\n    const html = await res.text();\r\n\r\n    const meta = (name) => {\r\n      const re = new RegExp(\r\n        `<meta[^>]+(?:property|name)=[\"']${name}[\"'][^>]*content=[\"']([^\"']+)`,\r\n        \"i\"\r\n      );\r\n      const m = html.match(re);\r\n      return m ? decode(m[1]) : null;\r\n    };\r\n    let title = meta(\"og:title\") || meta(\"twitter:title\") || getTitle(html) || url;\r\n    let image = meta(\"og:image\") || meta(\"twitter:image\") || null;\r\n    const description =\r\n      meta(\"og:description\") || meta(\"twitter:description\") || null;\r\n\r\n    // JSON-LD Rezept\r\n    const recipe = extractRecipeFromJsonLd(html);\r\n    const ingredients = recipe?.ingredients || [];\r\n    const steps = recipe?.steps || [];\r\n    const servings = recipe?.servings || null;\r\n\r\n    return json(200, { title, image, description, ingredients, steps, servings });\r\n  } catch (e) {\r\n    return json(200, { title:null,image:null,description:null,ingredients:[],steps:[],servings:null });\r\n  }\r\n}\r\n\r\nfunction json(status, body) {\r\n  return {\r\n    statusCode: status,\r\n    headers: { \"content-type\": \"application/json\", \"cache-control\": \"no-store\" },\r\n    body: JSON.stringify(body)\r\n  };\r\n}\r\nfunction getTitle(html) {\r\n  const m = html.match(/<title[^>]*>([^<]+)<\\/title>/i);\r\n  return m ? decode(m[1]) : null;\r\n}\r\nfunction decode(s) {\r\n  return s.replace(/&amp;/g,\"&\").replace(/&lt;/g,\"<\").replace(/&gt;/g,\">\")\r\n          .replace(/&#39;/g,\"'\").replace(/&quot;/g,'\"');\r\n}\r\nfunction extractRecipeFromJsonLd(html) {\r\n  const m = html.match(/<script[^>]+type=[\"']application\\/ld\\+json[\"'][^>]*>([\\s\\S]*?)<\\/script>/i);\r\n  if (!m) return null;\r\n  try {\r\n    const data = JSON.parse(m[1]);\r\n    const recipe = findRecipe(data);\r\n    if (!recipe) return null;\r\n    return {\r\n      title: recipe.name || null,\r\n      image: recipe.image?.url || recipe.image || null,\r\n      ingredients: recipe.recipeIngredient || [],\r\n      steps: Array.isArray(recipe.recipeInstructions)\r\n        ? recipe.recipeInstructions.map(x=>x.text||x.name||x).filter(Boolean)\r\n        : [],\r\n      servings: recipe.recipeYield ? parseInt(recipe.recipeYield) : null\r\n    };\r\n  } catch { return null; }\r\n}\r\nfunction findRecipe(obj) {\r\n  if (!obj) return null;\r\n  if (Array.isArray(obj)) return obj.map(findRecipe).find(Boolean);\r\n  if (typeof obj === \"object\") {\r\n    const t = obj[\"@type\"];\r\n    if (t===\"Recipe\" || (Array.isArray(t)&&t.includes(\"Recipe\"))) return obj;\r\n    if (obj[\"@graph\"]) return findRecipe(obj[\"@graph\"]);\r\n    for (const k of Object.keys(obj)) {\r\n      const r = findRecipe(obj[k]); if (r) return r;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
